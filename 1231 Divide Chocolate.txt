class Solution {
    public int maximizeSweetness(int[] sweetness, int K) {
        int left=1;
        int right=Integer.MAX_VALUE;
        int mid=left+(right-left)/2;
        while(left+1<right)
        {
            mid=left+(right-left)/2;
            if(helper(sweetness,mid)<K+1)
                right=mid;
            else
                left=mid;
        }
        if(helper(sweetness,left)>=K+1)
            return left;
        return right;
    }
    public int helper(int[] sweetness, int capacity)
    {
        int sum=0;
        int count=0;
        for(int i=0;i<sweetness.length;i++)
        {
            sum+=sweetness[i];
            if(sum>=capacity)
            {
                count++;
                sum=0;
            }
        }
        return count;
    }
}