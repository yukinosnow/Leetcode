class Solution {
    public List<Integer> minAvailableDuration(int[][] slots1, int[][] slots2, int duration) {
        List<Integer>result=new ArrayList<>();
        Arrays.sort(slots1,(int[]a, int[]b)->(a[0]-b[0]));
        Arrays.sort(slots2,(int[]a, int[]b)->(a[0]-b[0]));
        int c1=0;
        int c2=0;
        while(c1<slots1.length&&c2<slots2.length)
        {
            if((slots1[c1][0]<=slots2[c2][0]&&slots2[c2][0]<=slots1[c1][1])||(slots2[c2][0]<=slots1[c1][0]&&slots1[c1][0]<=slots2[c2][1]))
            {
                int start=Math.max(slots1[c1][0],slots2[c2][0]);
                int end=Math.min(slots1[c1][1],slots2[c2][1]);
                if(end-start>=duration)
                {
                    result.add(start);
                    result.add(start+duration);
                    break;
                }
            }
            
            if(slots1[c1][1]<slots2[c2][1])
                c1++;
            else
                c2++;
            
            
        }
        return result;
    }
}