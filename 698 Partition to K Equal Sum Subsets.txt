class Solution {
    public boolean canPartitionKSubsets(int[] nums, int k) {
        int sum=0;
        for(int i=0;i<nums.length;i++)
            sum+=nums[i];
        if(sum%k!=0)
            return false;
        Arrays.sort(nums);
        int target=sum/k;
        int[]bucket=new int[k];
        return helper(nums,nums.length-1,target,bucket);
    }
    public boolean helper(int[]nums, int position, int target, int[]bucket)
    {
        if(position<0)
        {
            for(int i=0;i<bucket.length;i++)
            {
                if(bucket[i]!=target)
                    return false;
            }
            return true;
        }
        for(int i=0;i<bucket.length;i++)
        {
            if(bucket[i]+nums[position]<=target)
            {
                bucket[i]+=nums[position];
                if(helper(nums,position-1,target,bucket))
                    return true;
                bucket[i]-=nums[position];
            }
        }
        return false;
    }
}