class Solution {
    public int smallestDivisor(int[] nums, int threshold) {
        int left=1;
        int right=(int)1e6;
        int mid=left+(right-left)/2;
        int sum=0;
        int result=Integer.MAX_VALUE;
        while(left+1<right)
        {
            mid=left+(right-left)/2;
            sum=Helper(nums,mid);
            if(sum>threshold)
                left=mid;
            else
            {
                result=Math.min(result,mid);
                right=mid;
            }
        }
        sum=Helper(nums,left);
        if(sum<=threshold)
            result=Math.min(result,left);
        sum=Helper(nums,right);
        if(sum<=threshold)
            result=Math.min(result,right);
        return result;
    }
    public int Helper(int[] nums, int divisor)
    {
        int sum=0;
        for(int i=0;i<nums.length;i++)
        {
            sum+=(int)Math.ceil((double)nums[i]/divisor);
        }
        return sum;
    }
}