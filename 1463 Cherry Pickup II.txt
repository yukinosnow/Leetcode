class Solution {
    public int cherryPickup(int[][] grid) {
        int[][][]ref=new int[grid.length][grid[0].length][grid[0].length];
        for(int i=0;i<ref.length;i++)
        {
            for(int j=0;j<ref[0].length;j++)
            {
                for(int k=0;k<ref[0][0].length;k++)
                    ref[i][j][k]=-1;
            }
        }
        return FindMaxMove(grid,ref,0,grid[0].length-1,0);
    }
    public int FindMaxMove(int[][]grid, int[][][]ref, int x1, int x2,int y)
    {
        if(x1<0||x1>=grid[0].length||x2<0||x2>=grid[0].length||y<0||y>=grid.length)
            return 0;
        if(ref[y][x1][x2]!=-1)
            return ref[y][x1][x2];
        int result=grid[y][x1];
        if(x1!=x2)
            result+=grid[y][x2];
        int max=0;
        for(int i=x1-1;i<=x1+1;i++)
        {
            for(int j=x2-1;j<=x2+1;j++)
            {
                max=Math.max(max,FindMaxMove(grid,ref,i,j,y+1));
            }
        }
        ref[y][x1][x2]=result+max;
        return result+max;
    }
}