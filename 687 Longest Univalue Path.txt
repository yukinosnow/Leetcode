/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int max=1;
    public int longestUnivaluePath(TreeNode root) {
        helper(root);
        return max-1;
    }
    public int helper(TreeNode node)
    {
        if(node==null)
            return 0;
        int left=0;
        int right=0;
        if(node.left!=null)
        {
            left=helper(node.left);
            if(node.left.val!=node.val)
                left=0;
        }
        if(node.right!=null)
        {
            right=helper(node.right);
            if(node.right.val!=node.val)
                right=0;
        }
        max=Math.max(max,left+right+1);
        return Math.max(left,right)+1;
        
    }
}