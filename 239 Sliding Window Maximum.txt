class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        Deque<Integer>dq=new LinkedList<>();
        int[]result=new int[nums.length-k+1];
        for(int i=0;i<k;i++)
        {
            while(!dq.isEmpty()&&dq.getLast()<nums[i])
            {
                dq.removeLast();
            }
            dq.addLast(nums[i]);
        }
        int left=0;
        int right=k;
        result[0]=dq.getFirst();
        int count=1;
        while(right<nums.length)
        {
            if(dq.getFirst()==nums[left])
                dq.removeFirst();
            while(!dq.isEmpty()&&dq.getLast()<nums[right])
            {
                dq.removeLast();
            }
            dq.addLast(nums[right]);
            result[count]=dq.getFirst();
            left++;
            right++;
            count++;
        }
        return result;
    }
}