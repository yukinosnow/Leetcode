public class Solution {
    public int longestPalindromeSubseq(String s) {
        int[][][] dp = new int[s.length()][s.length()][26];
        int max=0;
        for (int i = s.length() - 1; i >= 0; i--) {
            for (int j = i+1; j < s.length(); j++) {
                for(int k=0;k<26;k++)
                {
                    if (s.charAt(i) == s.charAt(j)&&s.charAt(i)-'a'!=k) {
                        dp[i][j][s.charAt(i)-'a'] = Math.max(dp[i+1][j-1][k] + 2,dp[i][j][s.charAt(i)-'a']);
                    } 
                    dp[i][j][k] = Math.max(dp[i+1][j][k], Math.max(dp[i][j-1][k],dp[i][j][k]));
                    
                }
            }
        }
        for(int i=0;i<26;i++)
        {
            max=Math.max(dp[0][s.length()-1][i],max);   
        }
        return max;
    }
}