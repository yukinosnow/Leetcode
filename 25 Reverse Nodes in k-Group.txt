/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode tempHead=new ListNode();
        tempHead.next=head;
        int count=0;
        ListNode prevHead=tempHead;
        ListNode prevTail=null;
        ListNode currTail=head;
        ListNode curr=head;
        while(curr!=null)
        {
            count=0;
            while(curr!=null&&count<k-1)
            {
                curr=curr.next;
                count++;
            }
            if(curr==null)
                break;
            prevTail=curr.next;
            curr.next=null;
            prevHead.next=ReverseNode(currTail);
            currTail.next=prevTail;

            curr=prevTail;
            prevHead=currTail;
            currTail=prevTail;
        }
        return tempHead.next;
    }
    public ListNode ReverseNode(ListNode node)
    {
        ListNode prev=null;
        ListNode curr=node;
        while(curr!=null)
        {
            ListNode next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
}