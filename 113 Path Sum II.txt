/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<List<Integer>>result=new ArrayList<>();
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if(root==null)
            return result;
        List<Integer>empty=new ArrayList<>();
        helper(root,targetSum,empty);
        return result;
    }
    public void helper(TreeNode node, int targetSum,List<Integer>list)
    {
        if(node.left==null&&node.right==null)
        {
            if(targetSum-node.val==0)
            {
                List<Integer>copy=new ArrayList<>(list);
                copy.add(node.val);
                result.add(copy);
            }
        }
        List<Integer>copy=new ArrayList<>(list);
        copy.add(node.val);
        if(node.left!=null)
            helper(node.left,targetSum-node.val,copy);
        if(node.right!=null)
            helper(node.right,targetSum-node.val,copy);
            
    }
}