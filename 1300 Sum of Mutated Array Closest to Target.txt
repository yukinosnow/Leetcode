class Solution {
    public int findBestValue(int[] arr, int target) {
        int left=0;
        int right=1;
        for(int i=0;i<arr.length;i++)
            right=Math.max(right,arr[i]);
        int mid=left+(right-left)/2;
        int leftDiff=0;
        int rightDiff=0;
        while(left+1<right)
        {
            mid=left+(right-left)/2;
            if(helper(arr,mid)>=target)
                right=mid;
            else
                left=mid;
        }
        leftDiff=Math.abs(helper(arr,left)-target);
        rightDiff=Math.abs(helper(arr,right)-target);
        if(leftDiff<=rightDiff)
            return left;
        return right;
    }
    public int helper(int[] arr,int value)
    {
        int sum=0;
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i]>value)
                sum+=value;
            else
                sum+=arr[i];
        }
        return sum;
    }
}