class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) {
        List<List<Integer>>ref=new ArrayList<>();
        Arrays.sort(intervals,(int[]a, int[]b)->(a[0]-b[0]));
        List<Integer>interset=Arrays.asList(newInterval[0],newInterval[1]);
        for(int i=0;i<intervals.length;i++)
        {
            if(intervals[i][1]<interset.get(0))
                ref.add(Arrays.asList(intervals[i][0],intervals[i][1]));
            else if(intervals[i][0]>interset.get(1))
            {
                ref.add(interset);
                interset=Arrays.asList(intervals[i][0],intervals[i][1]);
            }
            else
            {
                interset.set(0,Math.min(interset.get(0),intervals[i][0]));
                interset.set(1,Math.max(interset.get(1),intervals[i][1]));
            }
        }
        ref.add(interset);
        int[][]result=new int[ref.size()][2];
        for(int i=0;i<result.length;i++)
        {
            result[i][0]=ref.get(i).get(0);
            result[i][1]=ref.get(i).get(1);
        }
        return result;
    }
}