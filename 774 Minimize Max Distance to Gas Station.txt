class Solution {
    public double minmaxGasDist(int[] stations, int k) {
        double left=0;
        double right=1e8;
        double distanceBetweenStation=left+(right-left)/2;
        double result=Double.MAX_VALUE;
        while(left+1e-6<right)
        {
            distanceBetweenStation=left+(right-left)/2;
            if(PossibleAddAllStation(stations,k,distanceBetweenStation))
            {
                right=distanceBetweenStation;
                result=Math.min(result,distanceBetweenStation);
            }
            else
                left=distanceBetweenStation+1e-6;
        }
        return left;
    }
    public boolean PossibleAddAllStation(int[]stations, int k, double distanceBetweenStation)
    {
        int used = 0;
        for (int i = 0; i < stations.length - 1; ++i)
            used += (int) ((stations[i+1] - stations[i]) / distanceBetweenStation);
        return used <= k;
    }
}